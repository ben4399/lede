name: Lean's OpenWrt 2020.03.13 09:28 添加应用过滤

on:
  schedule:
    - cron: 0 20 * * *
  push:
    branches: 
      - master

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - name: 前期准备
        uses: actions/checkout@master
        with:
          ref: master

      - name: 清理空间
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
      - name: 自定义插件
        run: |
           rm    -rfv  package/lean/autocore
           git clone https://github.com/destan19/OpenAppFilter.git # 应用过滤
      - name: 更新源
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 生成配置文件
        run: |
          rm -f ./.config*
          touch ./.config

          # 编译x64固件:
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_Generic=y
          EOF

          # 固件压缩:
          cat >> .config <<EOF
          CONFIG_TARGET_IMAGES_GZIP=y
          EOF

          # 编译UEFI固件:
          # cat >> .config <<EOF
          # CONFIG_EFI_IMAGES=y
          # EOF

          # IPv6支持:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          # CONFIG_PACKAGE_ipv6helper=y
          # EOF

          # 多文件系统支持:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_kmod-fs-nfs=y
          # CONFIG_PACKAGE_kmod-fs-nfs-common=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v3=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          # CONFIG_PACKAGE_kmod-fs-ntfs=y
          # CONFIG_PACKAGE_kmod-fs-squashfs=y
          # EOF

          # USB3.0支持:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_kmod-usb-ohci=y
          # CONFIG_PACKAGE_kmod-usb-ohci-pci=y
          # CONFIG_PACKAGE_kmod-usb2=y
          # CONFIG_PACKAGE_kmod-usb2-pci=y
          # CONFIG_PACKAGE_kmod-usb3=y
          # EOF

          # 常用LuCI插件选择:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-app-aria2=y # Aria2下载
          CONFIG_PACKAGE_luci-app-frpc=y # 内网穿透 Frp
          CONFIG_PACKAGE_luci-app-qbittorrent=y # BT下载工具（qBittorrent）
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y # SSR科学上网Plus+
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y # SSR
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y # SSR
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y # SSR
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y # SSR V2
          CONFIG_PACKAGE_luci-app-unblockmusic=y # 解锁网易云灰色歌曲
          CONFIG_PACKAGE_luci-app-sfe=y # Turbo ACC 网络加速
          CONFIG_PACKAGE_luci-app-arpbind=y # IP/MAC绑定
          CONFIG_PACKAGE_luci-app-kodexplorery=y # KOD可道云私人网盘
          CONFIG_PACKAGE_luci-app-ntpc=y # NTP时间同步服务器
          CONFIG_PACKAGE_luci-app-ddns=y # 动态域名 DNS （集成阿里DDNS客户端）
          CONFIG_PACKAGE_luci-app-syncdial=y # 多拨虚拟WAN 
          CONFIG_PACKAGE_luci-app-mwan3helper=y # MWAN负载均衡
          CONFIG_PACKAGE_luci-app-mwan3=y # MWAN3分流助手
          CONFIG_PACKAGE_luci-i18n-mwan3-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-mwan3helper-zh-cn=y
          CONFIG_PACKAGE_oaf=y # 应用过滤内核模块包
          CONFIG_PACKAGE_open-app-filter=y # 应用层服务和脚本
          CONFIG_PACKAGE_luci-app-oaf=y # 界面安装包，包含中文语言包
          EOF

          # LuCI主题:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_luci-theme-argon=y
          # CONFIG_PACKAGE_luci-theme-netgear=y
          # EOF

          # 常用软件包:
          cat >> .config <<EOF
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_nano=y
          CONFIG_PACKAGE_screen=y
          CONFIG_PACKAGE_tree=y
          CONFIG_PACKAGE_vim-fuller=y
          CONFIG_PACKAGE_wget=y
          EOF

          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
          cat >> .config <<EOF
          # CONFIG_TARGET_IMAGES_PAD is not set
          # CONFIG_VMDK_IMAGES is not set
          EOF

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: 进行下载
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: 编译固件
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: 准备打包
        run: find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: 固件打包
        uses: actions/upload-artifact@master
        with:
          name: 固件下载
          path: ./bin/targets/

      - name:  插件打包
        uses: actions/upload-artifact@master
        with:
          name: 插件下载
          path: ./bin/packages/
